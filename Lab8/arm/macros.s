.EQU O_RDONLY, 0        // режим файла только для чтения
.EQU O_WRONLY, 1        // режим файла только для записи
.EQU O_CREAT, 0100      // режим создания файла
.EQU S_RDWR, 0666       // права для чтения и записи файла
.EQU AT_FDCWD, -100     // поиск файла в текущей папке
 
// макрос печати на консоль строки
.MACRO print str length
    MOV X0, #1          // 1 = StdOut - стандартный поток вывода
    LDR X1, =\str       // загружаем адрес выводимой строки
    MOV X2, \length          // в регистр X2 передаем результат макроса copy - длину строки из регистра X0
    MOV X8, #64         // функция Linux для вывода в поток
    SVC 0               // вызываем функцию Linux
.ENDM
// макрос выхода из программы
.MACRO exit code
    MOV X0, \code      // код возврата
    MOV X8, #93       // устанавливаем функцию Linux для выхода из программы
    SVC 0             // Вызываем функцию Linux
.ENDM
// макрос открытия файла. Принимает имя файла и флаги режима файла
.MACRO openFile fileName, flags
    MOV X0, #AT_FDCWD          // открываем файл в текущей папке
    LDR X1, =\fileName     // открываемый файл
    MOV X2, #\flags        // открываем для чтения, записи или создания
    MOV X3, #S_RDWR       // Права доступа - доступен для чтения и записи
    MOV X8, #56            // Функция открытия файла
    SVC 0
.ENDM
// макрос чтения файла. Принимает дескриптор файла, буфер для считывания данных и кол-во считываемых байтов
.MACRO readFile fd, buffer, length
    MOV X0, \fd         // устанавливаем дескриптор файла
    LDR X1, =\buffer    // Буфер для считывания
    MOV X2, #\length    // Сколько считываем байтов
    MOV X8, #63        // устанавливаем функцию Linux для чтения файла
    SVC 0              // Вызываем функцию Linux
.ENDM
// макрос записи файла. Принимает дескриптор файла, буфер для записи в файл и кол-во записываемых байтов
.MACRO writeFile fd, buffer, length
    MOV X0, \fd          // устанавливаем дескриптор файла  
    LDR X1, =\buffer     // Буфер для записи в файл
    MOV X2, \length     // Сколько записываем байтов
    MOV X8, #64        // устанавливаем функцию Linux для записи файла
    SVC 0              // Вызываем функцию Linux
.ENDM
// макрос сброса буфера в файл. Принимает дескриптор файла
.MACRO flush fd
    MOV X0, \fd
    MOV X8, #83     // сброс данных из буфера в файл
    SVC 0
.ENDM
// макрос закрытия файла. Принимает дескриптор файла
.MACRO close fd
    MOV X0, \fd    // дескриптор закрываемого файла
    MOV X8, #57     // Функция закрытия файла
    SVC 0
.ENDM
